// =============================================
//              Mixins                     
// ============================================= 

// BEM selectors
@mixin elem($element) {
    &__#{$element} {
        @content;
    }
}

@mixin modi($modifier) {
    &--#{$modifier} {
        @content;
    }
}

// Create a flex container
@mixin flexbox($disp: flex, $dir: null, $just: null, $align: null) {
    display: $disp;
    flex-direction: $dir;
    justify-content: $just;
    align-items: $align;
}

// Ser size for an icon
@mixin icn-size($sz) {
    width: $sz;
    height: $sz;
}

// Calculate gird columns
@mixin g-columns {
    @for $i from 1 through $g-col-count {
        &-#{$i} {
            flex-basis: $i / $g-col-count * 100%;
        }
    }
}

// Media queries
@mixin mq($break) {
    @if $break=="mobile" {
        @media (min-width: $mobile) and (max-width: $tablet) {
            @content;
        }
    }

    @else if $break=="tablet" {
        @media (min-width: $tablet) {
            @content;
        }
    }

    @else if $break=="desktop" {
        @media (min-width: $desktop) {
            @content;
        }
    }

    @else {
        @error "'#{$break}' is not a vaild breakpoint name.";
    }
}

// Generate modifier color classes
@mixin bg-colors($map) {

    @each $theme,
    $color in $map {
        &--#{$theme} {
            background-color: $color;
        }
    }

}